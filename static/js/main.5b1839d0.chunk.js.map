{"version":3,"sources":["components/settings-modal/index.js","components/slideshow/index.js","components/slideshow-builder/index.js","App.js","index.js"],"names":["SettingsModal","_ref","_ref2","_settings$slides","show","close","submit","_useState","useState","_useState2","_slicedToArray","img","setImg","_useState3","_useState4","text","setText","_useState5","_useState6","settings","setSettings","useEffect","handleSelect","event","_objectSpread","_defineProperty","target","name","value","_jsx","Modal","open","onClose","className","children","Box","_jsxs","Grid","container","flexDirection","justifyContent","height","item","textAlign","slides","map","elm","index","alignItems","spacing","xs","src","width","Stack","direction","htmlFor","Button","variant","component","style","textOverflow","whiteSpace","overflow","type","hidden","onChange","e","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","data","wrap","_context","prev","next","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","sent","stop","apply","arguments","handleSelectFile","files","TextField","placeholder","size","onClick","newSlides","push","undefined","FormControl","sx","m","minWidth","Select","duration","MenuItem","timingFunction","disabled","Object","keys","length","console","log","SlideShow","class","animationTimingFunction","animationDuration","slide","SlideShowBuilder","showModal","setShowModal","toggleShowModal","marginTop","modalSettings","App","padding","CssBaseline","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b1839d0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid, Box, Modal, Button, Stack, TextField, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\n\nconst SettingsModal = ({ show, close, submit }) => {\n    const [img, setImg] = useState('');\n    const [text, setText] = useState('');\n    const [settings, setSettings] = useState({});\n\n    useEffect(() => {\n        setSettings({});\n        setImg(\"\");\n        setText(\"\");\n    }, [show]);\n\n    const handleSelectFile = async (file) => {\n        let data = await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n\n        setImg(data);\n    };\n\n    const handleText = (event) => {\n        setText(event.target.value);\n    };\n\n    const handleSelect = (event) => {\n        setSettings({\n            ...settings,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const handleAddSlide = () => {\n        if (!img) return;\n\n        const newSlides = settings?.slides || [];\n\n        newSlides.push({\n            src: img,\n            text: text || undefined\n        });\n\n        setSettings({ ...settings, slides: newSlides });\n        setImg('');\n        setText('');\n    };\n\n    const handleSubmitSettings = () => {\n        console.log(settings);\n        submit(settings);\n    };\n\n    return (\n        <Modal\n            open={show}\n            onClose={close}\n            className=\"modal-custom\"\n        >\n            <Box className=\"box-custom text-center\">\n                <Grid container flexDirection=\"column\" justifyContent=\"space-between\" height=\"100%\">\n                    <Grid item>\n                        <Grid container justifyContent=\"center\">\n                            <Grid item>\n                                <h2>Add your Slideshow settings</h2>\n                            </Grid>\n                        </Grid>\n                        <Grid container>\n                            <Grid item textAlign=\"left\">\n                                <h3>1. Add Your Slides</h3>\n                            </Grid>\n                        </Grid>\n                        <Grid className=\"submissions_scroll_bar\">\n                            {\n                                settings?.slides?.map((elm, index) => (\n                                    <Grid key={index} item container alignItems=\"center\" spacing={1}>\n                                        <Grid item xs={2}>\n                                            <img\n                                                src={elm.src}\n                                                width=\"80%\"\n                                                height=\"100%\"\n                                            />\n                                        </Grid>\n                                        <Grid item xs={10} className=\"slider-text\" textAlign=\"left\">\n                                            <p>{elm.text}</p>\n                                        </Grid>\n                                    </Grid>\n                                ))\n                            }\n                        </Grid>\n                        <Grid container alignItems=\"center\" spacing={2}>\n                            <Grid item>\n                                <Stack direction=\"row\">\n                                    <label htmlFor=\"text-capitalize\">\n                                        <Button\n                                            variant=\"outlined\"\n                                            className=\"fs-14 text-capitalize\"\n                                            component=\"label\"\n                                            style={{\n                                                textOverflow: 'ellipsis',\n                                                whiteSpace: 'nowrap',\n                                                overflow: 'hidden',\n                                            }}\n                                        >\n                                            Choose Image\n                                            <input\n                                                type=\"file\"\n                                                hidden\n                                                onChange={(e) => {\n                                                    handleSelectFile(e.target.files[0]), (e.target.value = null);\n                                                }}\n                                            />\n                                        </Button>\n                                    </label>\n                                </Stack>\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    type=\"text\"\n                                    variant=\"outlined\"\n                                    placeholder=\"Slider Text (Optional)\"\n                                    size=\"small\"\n                                    name=\"text\"\n                                    value={text}\n                                    onChange={handleText}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"contained\"\n                                    className=\"text-capitalize\"\n                                    onClick={handleAddSlide}\n                                >\n                                    Add\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Grid container flexDirection=\"column\" alignItems=\"flex-start\">\n                            <Grid item>\n                                <h3>2. Select The Slideshow Duration</h3>\n                            </Grid>\n                            <Grid item>\n                                <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n                                    <Select\n                                        value={settings?.duration}\n                                        onChange={handleSelect}\n                                        name=\"duration\"\n                                    >\n                                        <MenuItem value=\"1s\">1s</MenuItem>\n                                        <MenuItem value=\"2s\">2s</MenuItem>\n                                        <MenuItem value=\"3s\">3s</MenuItem>\n                                        <MenuItem value=\"4s\">4s</MenuItem>\n                                        <MenuItem value=\"5s\">5s</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        <Grid container flexDirection=\"column\" alignItems=\"flex-start\">\n                            <Grid item>\n                                <h3>2. Select The Slideshow Timing Function</h3>\n                            </Grid>\n                            <Grid item>\n                                <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n                                    <Select\n                                        value={settings?.timingFunction}\n                                        onChange={handleSelect}\n                                        name=\"timingFunction\"\n                                    >\n                                        <MenuItem value=\"ease\">ease</MenuItem>\n                                        <MenuItem value=\"ease-in\">ease-in</MenuItem>\n                                        <MenuItem value=\"ease-out\">ease-out</MenuItem>\n                                        <MenuItem value=\"ease-in-out\">ease-in-out</MenuItem>\n                                        <MenuItem value=\"linear\">linear</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item container justifyContent=\"center\" spacing={1}>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                className=\"text-capitalize\"\n                                disabled={Object.keys(settings).length != 3}\n                                onClick={handleSubmitSettings}\n                            >\n                                Create Slideshow\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant=\"outlined\"\n                                className=\"text-capitalize\"\n                                onClick={close}\n                            >\n                                Cancel\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Modal >\n    );\n}\n\nexport default SettingsModal;\n","import React, { useState } from 'react';\nimport { Grid } from '@mui/material';\n\nconst SlideShow = ({ settings }) => {\n    return (\n        <div class=\"slideshow\">\n            {\n                [1, 2].map(elm => (\n                    <Grid\n                        key={elm}\n                        className=\"slideshow-slider\"\n                        style={{\n                            animationTimingFunction: settings?.timingFunction,\n                            animationDuration: settings?.duration\n                        }}\n                    >\n                        {\n                            settings?.slides.map(slide => (\n                                <Grid container flexDirection=\"column\">\n                                    <Grid item>\n                                        <img\n                                            src={slide?.src}\n                                            width=\"375\"\n                                            height=\"530\"\n                                        />\n                                    </Grid>\n                                    <Grid item className=\"slider-text\">\n                                        <p>{slide?.text}</p>\n                                    </Grid>\n                                </Grid>\n                            ))\n                        }\n                    </Grid>\n                ))\n            }\n        </div>\n    );\n};\n\nexport default SlideShow;","import React, { useState } from 'react';\nimport { Grid, Button } from '@mui/material';\nimport SettingsModal from '../settings-modal';\nimport SlideShow from '../slideshow';\n\nconst SlideShowBuilder = () => {\n    const [settings, setSettings] = useState({});\n    const [showModal, setShowModal] = useState(false);\n\n    const toggleShowModal = () => {\n        setShowModal(!showModal);\n    };\n\n    const handleReset = () => {\n        setSettings({});\n    };\n\n    const handleSubmit = (modalSettings) => {\n        setSettings({\n            ...settings,\n            ...modalSettings\n        });\n        toggleShowModal();\n    };\n\n    return (\n        <Grid container flexDirection=\"column\">\n            <Grid item container justifyContent=\"center\" spacing={2}>\n                <Grid item>\n                    <Button\n                        className=\"text-capitalize\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        disabled={Object.keys(settings).length == 3}\n                        onClick={toggleShowModal}\n                    >\n                        Build Your SlideShow\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Button\n                        className=\"text-capitalize\"\n                        variant=\"outlined\"\n                        size=\"large\"\n                        onClick={handleReset}\n                    >\n                        Reset\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid item marginTop={5}>\n                {\n                    Object.keys(settings).length == 3 && (\n                        <SlideShow settings={settings} />\n                    )\n                }\n            </Grid>\n            <SettingsModal\n                show={showModal}\n                close={toggleShowModal}\n                submit={handleSubmit}\n            />\n        </Grid>\n    );\n}\n\nexport default SlideShowBuilder;\n","import React from 'react';\nimport './App.css';\nimport { CssBaseline } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport SlideShowBuilder from './components/slideshow-builder';\n\nconst App = () => {\n    return (\n        <Grid padding={4}>\n            <SlideShowBuilder />\n            <CssBaseline />\n        </Grid>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}